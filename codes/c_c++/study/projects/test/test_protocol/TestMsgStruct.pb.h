// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TestMsgStruct.proto

#ifndef PROTOBUF_INCLUDED_TestMsgStruct_2eproto
#define PROTOBUF_INCLUDED_TestMsgStruct_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TestMsgDefine.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TestMsgStruct_2eproto 

namespace protobuf_TestMsgStruct_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TestMsgStruct_2eproto
namespace TestMsg {
class CommonInfo;
class CommonInfoDefaultTypeInternal;
extern CommonInfoDefaultTypeInternal _CommonInfo_default_instance_;
class CommonInfoList;
class CommonInfoListDefaultTypeInternal;
extern CommonInfoListDefaultTypeInternal _CommonInfoList_default_instance_;
}  // namespace TestMsg
namespace google {
namespace protobuf {
template<> ::TestMsg::CommonInfo* Arena::CreateMaybeMessage<::TestMsg::CommonInfo>(Arena*);
template<> ::TestMsg::CommonInfoList* Arena::CreateMaybeMessage<::TestMsg::CommonInfoList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace TestMsg {

// ===================================================================

class CommonInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestMsg.CommonInfo) */ {
 public:
  CommonInfo();
  virtual ~CommonInfo();

  CommonInfo(const CommonInfo& from);

  inline CommonInfo& operator=(const CommonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonInfo(CommonInfo&& from) noexcept
    : CommonInfo() {
    *this = ::std::move(from);
  }

  inline CommonInfo& operator=(CommonInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonInfo* internal_default_instance() {
    return reinterpret_cast<const CommonInfo*>(
               &_CommonInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CommonInfo* other);
  friend void swap(CommonInfo& a, CommonInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonInfo* New() const final {
    return CreateMaybeMessage<CommonInfo>(NULL);
  }

  CommonInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommonInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommonInfo& from);
  void MergeFrom(const CommonInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes test_string = 3;
  void clear_test_string();
  static const int kTestStringFieldNumber = 3;
  const ::std::string& test_string() const;
  void set_test_string(const ::std::string& value);
  #if LANG_CXX11
  void set_test_string(::std::string&& value);
  #endif
  void set_test_string(const char* value);
  void set_test_string(const void* value, size_t size);
  ::std::string* mutable_test_string();
  ::std::string* release_test_string();
  void set_allocated_test_string(::std::string* test_string);

  // double test_double = 2;
  void clear_test_double();
  static const int kTestDoubleFieldNumber = 2;
  double test_double() const;
  void set_test_double(double value);

  // float test_float = 1;
  void clear_test_float();
  static const int kTestFloatFieldNumber = 1;
  float test_float() const;
  void set_test_float(float value);

  // int32 test_int32 = 4;
  void clear_test_int32();
  static const int kTestInt32FieldNumber = 4;
  ::google::protobuf::int32 test_int32() const;
  void set_test_int32(::google::protobuf::int32 value);

  // sint32 test_sint32 = 5;
  void clear_test_sint32();
  static const int kTestSint32FieldNumber = 5;
  ::google::protobuf::int32 test_sint32() const;
  void set_test_sint32(::google::protobuf::int32 value);

  // uint32 test_uint32 = 6;
  void clear_test_uint32();
  static const int kTestUint32FieldNumber = 6;
  ::google::protobuf::uint32 test_uint32() const;
  void set_test_uint32(::google::protobuf::uint32 value);

  // int64 test_int64 = 7;
  void clear_test_int64();
  static const int kTestInt64FieldNumber = 7;
  ::google::protobuf::int64 test_int64() const;
  void set_test_int64(::google::protobuf::int64 value);

  // sint64 test_sint64 = 8;
  void clear_test_sint64();
  static const int kTestSint64FieldNumber = 8;
  ::google::protobuf::int64 test_sint64() const;
  void set_test_sint64(::google::protobuf::int64 value);

  // uint64 test_uint64 = 9;
  void clear_test_uint64();
  static const int kTestUint64FieldNumber = 9;
  ::google::protobuf::uint64 test_uint64() const;
  void set_test_uint64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TestMsg.CommonInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr test_string_;
  double test_double_;
  float test_float_;
  ::google::protobuf::int32 test_int32_;
  ::google::protobuf::int32 test_sint32_;
  ::google::protobuf::uint32 test_uint32_;
  ::google::protobuf::int64 test_int64_;
  ::google::protobuf::int64 test_sint64_;
  ::google::protobuf::uint64 test_uint64_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TestMsgStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommonInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestMsg.CommonInfoList) */ {
 public:
  CommonInfoList();
  virtual ~CommonInfoList();

  CommonInfoList(const CommonInfoList& from);

  inline CommonInfoList& operator=(const CommonInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonInfoList(CommonInfoList&& from) noexcept
    : CommonInfoList() {
    *this = ::std::move(from);
  }

  inline CommonInfoList& operator=(CommonInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonInfoList* internal_default_instance() {
    return reinterpret_cast<const CommonInfoList*>(
               &_CommonInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CommonInfoList* other);
  friend void swap(CommonInfoList& a, CommonInfoList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonInfoList* New() const final {
    return CreateMaybeMessage<CommonInfoList>(NULL);
  }

  CommonInfoList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommonInfoList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommonInfoList& from);
  void MergeFrom(const CommonInfoList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TestMsg.CommonInfo common_info_list = 1;
  int common_info_list_size() const;
  void clear_common_info_list();
  static const int kCommonInfoListFieldNumber = 1;
  ::TestMsg::CommonInfo* mutable_common_info_list(int index);
  ::google::protobuf::RepeatedPtrField< ::TestMsg::CommonInfo >*
      mutable_common_info_list();
  const ::TestMsg::CommonInfo& common_info_list(int index) const;
  ::TestMsg::CommonInfo* add_common_info_list();
  const ::google::protobuf::RepeatedPtrField< ::TestMsg::CommonInfo >&
      common_info_list() const;

  // repeated .TestMsg.CommonType common_type_list = 2;
  int common_type_list_size() const;
  void clear_common_type_list();
  static const int kCommonTypeListFieldNumber = 2;
  ::TestMsg::CommonType common_type_list(int index) const;
  void set_common_type_list(int index, ::TestMsg::CommonType value);
  void add_common_type_list(::TestMsg::CommonType value);
  const ::google::protobuf::RepeatedField<int>& common_type_list() const;
  ::google::protobuf::RepeatedField<int>* mutable_common_type_list();

  // @@protoc_insertion_point(class_scope:TestMsg.CommonInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TestMsg::CommonInfo > common_info_list_;
  ::google::protobuf::RepeatedField<int> common_type_list_;
  mutable int _common_type_list_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TestMsgStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonInfo

// float test_float = 1;
inline void CommonInfo::clear_test_float() {
  test_float_ = 0;
}
inline float CommonInfo::test_float() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_float)
  return test_float_;
}
inline void CommonInfo::set_test_float(float value) {
  
  test_float_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_float)
}

// double test_double = 2;
inline void CommonInfo::clear_test_double() {
  test_double_ = 0;
}
inline double CommonInfo::test_double() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_double)
  return test_double_;
}
inline void CommonInfo::set_test_double(double value) {
  
  test_double_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_double)
}

// bytes test_string = 3;
inline void CommonInfo::clear_test_string() {
  test_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommonInfo::test_string() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_string)
  return test_string_.GetNoArena();
}
inline void CommonInfo::set_test_string(const ::std::string& value) {
  
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_string)
}
#if LANG_CXX11
inline void CommonInfo::set_test_string(::std::string&& value) {
  
  test_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestMsg.CommonInfo.test_string)
}
#endif
inline void CommonInfo::set_test_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestMsg.CommonInfo.test_string)
}
inline void CommonInfo::set_test_string(const void* value, size_t size) {
  
  test_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestMsg.CommonInfo.test_string)
}
inline ::std::string* CommonInfo::mutable_test_string() {
  
  // @@protoc_insertion_point(field_mutable:TestMsg.CommonInfo.test_string)
  return test_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommonInfo::release_test_string() {
  // @@protoc_insertion_point(field_release:TestMsg.CommonInfo.test_string)
  
  return test_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommonInfo::set_allocated_test_string(::std::string* test_string) {
  if (test_string != NULL) {
    
  } else {
    
  }
  test_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_string);
  // @@protoc_insertion_point(field_set_allocated:TestMsg.CommonInfo.test_string)
}

// int32 test_int32 = 4;
inline void CommonInfo::clear_test_int32() {
  test_int32_ = 0;
}
inline ::google::protobuf::int32 CommonInfo::test_int32() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_int32)
  return test_int32_;
}
inline void CommonInfo::set_test_int32(::google::protobuf::int32 value) {
  
  test_int32_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_int32)
}

// sint32 test_sint32 = 5;
inline void CommonInfo::clear_test_sint32() {
  test_sint32_ = 0;
}
inline ::google::protobuf::int32 CommonInfo::test_sint32() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_sint32)
  return test_sint32_;
}
inline void CommonInfo::set_test_sint32(::google::protobuf::int32 value) {
  
  test_sint32_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_sint32)
}

// uint32 test_uint32 = 6;
inline void CommonInfo::clear_test_uint32() {
  test_uint32_ = 0u;
}
inline ::google::protobuf::uint32 CommonInfo::test_uint32() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_uint32)
  return test_uint32_;
}
inline void CommonInfo::set_test_uint32(::google::protobuf::uint32 value) {
  
  test_uint32_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_uint32)
}

// int64 test_int64 = 7;
inline void CommonInfo::clear_test_int64() {
  test_int64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommonInfo::test_int64() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_int64)
  return test_int64_;
}
inline void CommonInfo::set_test_int64(::google::protobuf::int64 value) {
  
  test_int64_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_int64)
}

// sint64 test_sint64 = 8;
inline void CommonInfo::clear_test_sint64() {
  test_sint64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommonInfo::test_sint64() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_sint64)
  return test_sint64_;
}
inline void CommonInfo::set_test_sint64(::google::protobuf::int64 value) {
  
  test_sint64_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_sint64)
}

// uint64 test_uint64 = 9;
inline void CommonInfo::clear_test_uint64() {
  test_uint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CommonInfo::test_uint64() const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfo.test_uint64)
  return test_uint64_;
}
inline void CommonInfo::set_test_uint64(::google::protobuf::uint64 value) {
  
  test_uint64_ = value;
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfo.test_uint64)
}

// -------------------------------------------------------------------

// CommonInfoList

// repeated .TestMsg.CommonInfo common_info_list = 1;
inline int CommonInfoList::common_info_list_size() const {
  return common_info_list_.size();
}
inline void CommonInfoList::clear_common_info_list() {
  common_info_list_.Clear();
}
inline ::TestMsg::CommonInfo* CommonInfoList::mutable_common_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:TestMsg.CommonInfoList.common_info_list)
  return common_info_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TestMsg::CommonInfo >*
CommonInfoList::mutable_common_info_list() {
  // @@protoc_insertion_point(field_mutable_list:TestMsg.CommonInfoList.common_info_list)
  return &common_info_list_;
}
inline const ::TestMsg::CommonInfo& CommonInfoList::common_info_list(int index) const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfoList.common_info_list)
  return common_info_list_.Get(index);
}
inline ::TestMsg::CommonInfo* CommonInfoList::add_common_info_list() {
  // @@protoc_insertion_point(field_add:TestMsg.CommonInfoList.common_info_list)
  return common_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TestMsg::CommonInfo >&
CommonInfoList::common_info_list() const {
  // @@protoc_insertion_point(field_list:TestMsg.CommonInfoList.common_info_list)
  return common_info_list_;
}

// repeated .TestMsg.CommonType common_type_list = 2;
inline int CommonInfoList::common_type_list_size() const {
  return common_type_list_.size();
}
inline void CommonInfoList::clear_common_type_list() {
  common_type_list_.Clear();
}
inline ::TestMsg::CommonType CommonInfoList::common_type_list(int index) const {
  // @@protoc_insertion_point(field_get:TestMsg.CommonInfoList.common_type_list)
  return static_cast< ::TestMsg::CommonType >(common_type_list_.Get(index));
}
inline void CommonInfoList::set_common_type_list(int index, ::TestMsg::CommonType value) {
  common_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestMsg.CommonInfoList.common_type_list)
}
inline void CommonInfoList::add_common_type_list(::TestMsg::CommonType value) {
  common_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:TestMsg.CommonInfoList.common_type_list)
}
inline const ::google::protobuf::RepeatedField<int>&
CommonInfoList::common_type_list() const {
  // @@protoc_insertion_point(field_list:TestMsg.CommonInfoList.common_type_list)
  return common_type_list_;
}
inline ::google::protobuf::RepeatedField<int>*
CommonInfoList::mutable_common_type_list() {
  // @@protoc_insertion_point(field_mutable_list:TestMsg.CommonInfoList.common_type_list)
  return &common_type_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TestMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TestMsgStruct_2eproto
