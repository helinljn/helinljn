# CMake最低版本
CMAKE_MINIMUM_REQUIRED(VERSION 3.15)

# C/C++语言标准
SET(CMAKE_C_STANDARD            99)
SET(CMAKE_C_STANDARD_REQUIRED   ON)
SET(CMAKE_C_EXTENSIONS          OFF)
SET(CMAKE_CXX_STANDARD          17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS        OFF)

# Debug & Release选项
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose Debug or Release" FORCE)
    MESSAGE(STATUS "CMAKE_BUILD_TYPE is not set, set default build to Release")
ENDIF()

# 项目名字
PROJECT(study)

# 编译选项、链接选项
IF(MSVC)
    # 编译选项
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS} /W4 /MP")
    SET(CMAKE_C_FLAGS_DEBUG            "${CMAKE_C_FLAGS_DEBUG}")
    SET(CMAKE_C_FLAGS_RELEASE          "${CMAKE_C_FLAGS_RELEASE}")

    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} /std:c++17 /Zc:__cplusplus /W4 /MP")
    SET(CMAKE_CXX_FLAGS_DEBUG          "${CMAKE_CXX_FLAGS_DEBUG}")
    SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE}")

    # 链接选项
    SET(CMAKE_EXE_LINKER_FLAGS         "${CMAKE_EXE_LINKER_FLAGS}")
    SET(CMAKE_EXE_LINKER_FLAGS_DEBUG   "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
    SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")

    # 优先链接静态库
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .dll ${CMAKE_FIND_LIBRARY_SUFFIXES})

    # 设置MTd & MT
    SET(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
ELSE()
    # 编译选项
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS} -std=c99 -Wall -Wextra -Wpedantic")
    SET(CMAKE_C_FLAGS_DEBUG            "${CMAKE_C_FLAGS_DEBUG}")
    SET(CMAKE_C_FLAGS_RELEASE          "${CMAKE_C_FLAGS_RELEASE}")

    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wextra -Wpedantic")
    SET(CMAKE_CXX_FLAGS_DEBUG          "${CMAKE_CXX_FLAGS_DEBUG}")
    SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE}")

    # 链接选项
    SET(CMAKE_EXE_LINKER_FLAGS         "${CMAKE_EXE_LINKER_FLAGS}")
    SET(CMAKE_EXE_LINKER_FLAGS_DEBUG   "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
    SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")

    # 优先链接静态库
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
ENDIF()

# 设置生成目录
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/output)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/output)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/output)

# 生成静态库
ADD_SUBDIRECTORY(3rd)
ADD_SUBDIRECTORY(util)

# 生成可执行文件
ADD_SUBDIRECTORY(test)

# 调试信息
MESSAGE(STATUS "---------------------------------------------------------------------")
MESSAGE(STATUS "PROJECT_SOURCE_DIR             = ${PROJECT_SOURCE_DIR}")
MESSAGE(STATUS "PROJECT_BINARY_DIR             = ${PROJECT_BINARY_DIR}")
MESSAGE(STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY = ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
MESSAGE(STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY = ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
MESSAGE(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY = ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
MESSAGE(STATUS "CMAKE_PROJECT_NAME             = ${CMAKE_PROJECT_NAME}")
MESSAGE(STATUS "CMAKE_C_STANDARD               = C${CMAKE_C_STANDARD}")
MESSAGE(STATUS "CMAKE_CXX_STANDARD             = C++${CMAKE_CXX_STANDARD}")
MESSAGE(STATUS "CMAKE_BUILD_TYPE               = ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "CMAKE_C_FLAGS                  = ${CMAKE_C_FLAGS}")
MESSAGE(STATUS "CMAKE_C_FLAGS_DEBUG            = ${CMAKE_C_FLAGS_DEBUG}")
MESSAGE(STATUS "CMAKE_C_FLAGS_RELEASE          = ${CMAKE_C_FLAGS_RELEASE}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS                = ${CMAKE_CXX_FLAGS}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS_DEBUG          = ${CMAKE_CXX_FLAGS_DEBUG}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS_RELEASE        = ${CMAKE_CXX_FLAGS_RELEASE}")
MESSAGE(STATUS "CMAKE_EXE_LINKER_FLAGS         = ${CMAKE_EXE_LINKER_FLAGS}")
MESSAGE(STATUS "CMAKE_EXE_LINKER_FLAGS_DEBUG   = ${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
MESSAGE(STATUS "CMAKE_EXE_LINKER_FLAGS_RELEASE = ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
MESSAGE(STATUS "CMAKE_FIND_LIBRARY_SUFFIXES    = ${CMAKE_FIND_LIBRARY_SUFFIXES}")
MESSAGE(STATUS "---------------------------------------------------------------------")