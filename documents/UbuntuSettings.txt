---------------------
-- Ubuntu 系统设置 --
---------------------

【1. 修改boot菜单和启动时间】
	sudo su
	vi /boot/grub/grub.cfg
	timeout=0

【2. 开启root用户并设置密码】
	sudo passwd root

【3. 静态IP配置】
	vi /etc/network/interfaces

	-- begin --
	# This file describes the network interfaces available on your system
	# and how to activate them. For more information, see interfaces(5).

	source /etc/network/interfaces.d/*

	# The loopback network interface
	auto lo
	iface lo inet loopback

	# The primary network interface
	auto ens32
	iface ens32 inet static
	address 192.168.1.100
	netmask 255.255.255.0
	gateway 192.168.1.1
	dns-nameservers 114.114.114.114
	dns-nameservers 114.114.115.115
	-- end --

	service networking restart

【4. 动态IP配置】
	vi /etc/network/interfaces

	-- begin --
	# This file describes the network interfaces available on your system
	# and how to activate them. For more information, see interfaces(5).

	source /etc/network/interfaces.d/*

	# The loopback network interface
	auto lo
	iface lo inet loopback

	# The primary network interface
	auto ens32
	iface ens32 inet dhcp
	-- end --

	service networking restart

【5. 修改ssh配置禁止root用户远程登录】
	vi /etc/ssh/sshd_config
	查找“#PermitRootLogin yes”，将前面的“#”去掉，短尾“yes”改为“no”，并保存文件

【6. 修改更新源为aliyun】
	cp /etc/apt/sources.list /etc/apt/sources.list.bak
	vi /etc/apt/sources.list
	
	将源文件内容全部注释，并添加以下内容任意源
	Ubuntu 20.04
		deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
	Ubuntu 22.04
		deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse

		deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
		
		deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse
		deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse

	执行apt update

【7. ~/.bashrc相关的alias修改】
	alias cp='cp -i'
	alias mv='mv -i'
	alias rm='rm -i'
	alias lla='ls -Alh'

【8. coredump相关设置】
	将默认的shell改成bash：
		dpkg-reconfigure dash 然后选择no

	在/etc/rc.local中加入以下内容，要放在exit 0的上面
	# format the name of core file.   
	# %% – 符号%
	# %p – 进程号
	# %u – 进程用户id
	# %g – 进程用户组id
	# %s – 生成core文件时收到的信号
	# %t – 生成core文件的时间戳(seconds since 0:00h, 1 Jan 1970)
	# %h – 主机名
	# %e – 程序文件名
	echo "./core-%e-%s-%u-%g-%p-%t" > /proc/sys/kernel/core_pattern

【9. 优化系统设置】
	打开/etc/security/limits.conf文件，加入以下选项
		root soft core   unlimited
		root hard core   unlimited
		root soft nofile 102400
		root hard nofile 102400
		
		helin soft core   unlimited
		helin hard core   unlimited
		helin soft nofile 102400
		helin hard nofile 102400

	或者临时修改(WSL2中可以添加到.bashrc中)：
		ulimit -c unlimited
		ulimit -n 4096

【10. ufw防火墙相关】
	开启防火墙：
		ufw enable
		ufw default deny
	关闭防火墙：
		ufw disable
	开放端口：
		ufw allow 22
		ufw allow 3690
		ufw allow 8088
	关闭端口：
		ufw delete allow 8088

【11. svn搭建】
su root
mkdir -p /mydata/svn
cd /mydata/svn
svnadmin create hedalin
cd hedalin/conf
chmod u=rw,g=,o= ./*

vi svnserve.conf
anon-access = none
auth-access = write
password-db = passwd
authz-db = authz

vi passwd
hedalin = xxx

vi authz
[groups]
admin = hedalin

[hedalin:/]
@admin = rw

svnserve -d -r /mydata/svn
最后：开启svn的端口号3690

测试：
svn co svn://127.0.0.1/hedalin ./shmilyl --username hedalin --password xxx

【12. 常用工具安装】
apt -y install lrzsz
apt -y install dos2unix
apt -y install ntpdate
apt -y install net-tools
apt -y install subversion
apt -y install lua5.3
apt -y install build-essential
apt -y install autoconf
apt -y install automake
apt -y install cmake
apt -y install libtool
apt -y install gdb
apt -y install zip
apt -y install unzip
apt -y install zlib1g
apt -y install zlib1g-dev
apt -y install manpages
apt -y install manpages-dev

【13. 时间同步】
ntpdate time.windows.com
hwclock -w

【14. 最后清理动作】
apt autoremove
apt clean
apt autoclean

【15. VS2019 + WSL gdb调试环境】
apt -y install openssh-server

设置root密码，gdb调试需要root权限
	sudo su
	passwd root

修改ssh配置，为了预防跟Windows端口冲突，直接改为23号端口
	vi /etc/ssh/sshd_config
		Port 23
		PermitRootLogin yes
		PasswordAuthentication yes

service ssh --full-restart

gdb调试时，因为加载不到对应的.so导致的断点无法挂上，则需要将对应的动态库建立软连接添加到/root目录下：
	sudo su
	cd /root
	touch make_symble_for_vs_gdb.sh
		ln -sf /mnt/d/aaa/bbb/*.so ./

【16. WSL 升级 WSL2】
1. 务必保证当前操作系统更新了最新的补丁

2. BIOS中开启CPU虚拟化支持

3. 使用管理员权限打开PowerShell
	a. 开启Hyper-V          : Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
	b. 开启Windows子系统模块: dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
	c. 开启Windows虚拟机功能: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
	d. 重启电脑
	
4. 下载并安装Linux kernel补丁包
	https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi
	
5. 使用管理员权限打开PowerShell
	如果还没安装子系统的情况
		WSL --set-default-version 2

	如果已经存在一个现有的子系统的情况
		WSL -l 来找到对应的子系统名
		WSL --set-version {subsystem-name} 2
		
	检查是否已经成功更新为WSL2版本
		WSL -l -v

6. 使用WSL2新建的一切类型的文件，其默认权限都是777
	sudo vi /etc/wsl.conf
		[automount]
		enabled = true
		options = "metadata,umask=22,fmask=11"

	vi ~/.bashrc
		if [[ "$(umask)" = "0000" ]]; then
			umask 0022
		fi

7. 从WSL升级到WSL2后，启动WSL2报错
	- 启动Ubuntu-20.04时出现错误0x80070780
	- [process exited with code 4294967295]

	从WSL升级到WSL2后，打开Ubuntu时可能会报以上错误，通过重置winsock可以解决，在cmd或Powershell中，用管理员模式运行：
		netsh winsock reset
	之后重启windows系统，再打开Terminal则可以正常启动WSL2

8. 解决宿主机局域网无法访问WSL2特定端口的服务
	- WSL2是基于Hyper-V的独立虚机环境，网络和Windows宿主机是相互独立的。在WSL2上运行的服务，在宿主机的局域网中无法直接访问，需要在宿主机上添加Windows防火墙端口转发规则，即设置一个入站和出站规则，将局域网中对宿主机相同端口的请求转发到WSL2上。
	- 需要注意的是，WSL2的IP地址会随着宿主机重启而发生变化，入站和出站规则需要指定目标IP地址才能生效，所以需要有一个脚本来读取WSL2的IP地址，并自动更新宿主机的入站和出站规则。

	1. 如果Win10上安装了多个WSL，需要将WSL默认的分发版本设置为需要提供服务的系统版本
		> wsl -l -v
			NAME            STATE           VERSION
			* Ubuntu-20.04    Running         2
			  Ubuntu-16.04    Stopped         1
		> wsl --set-default Ubuntu-20.04 2
	此后在命令行或powershell中执行wsl.exe时才能正确打开Ubuntu20.04

	2. 端口转发脚本wslbridge.ps1
		# 使用管理员权限运行
		if (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
		    Start-Process PowerShell -Verb RunAs "-NoProfile -ExecutionPolicy Bypass -Command `"cd '$pwd'; & '$PSCommandPath';`"";
		    exit;
		}

		#读取WSL2的IP地址
		$remoteport = wsl ifconfig eth0 | wsl grep 'inet '
		$found = $remoteport -match '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}';

		if( $found ) {
		  $remoteport = $matches[0];
		} else{
		  echo "The Script Exited, the ip address of WSL 2 cannot be found";
		  exit;
		}

		#[Ports]
		#修改为WSL2提供的端口号，用逗号分隔
		$ports=@(80,443,3633,4101,4102,10501);

		#[Static ip]
		$addr='0.0.0.0';
		$ports_a = $ports -join ",";

		#删除旧的Windows防火墙规则
		iex "Remove-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' ";

		#添加新的Windows防火墙入站和出站规则
		iex "New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Outbound -LocalPort $ports_a -Action Allow -Protocol TCP";
		iex "New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Inbound -LocalPort $ports_a -Action Allow -Protocol TCP";

		for( $i = 0; $i -lt $ports.length; $i++ ) {
		  $port = $ports[$i];
		  iex "netsh interface portproxy delete v4tov4 listenport=$port listenaddress=$addr";
		  iex "netsh interface portproxy add v4tov4 listenport=$port listenaddress=$addr connectport=$port connectaddress=$remoteport";
		}
	运行完以上脚本后，可以在powershell中输入以下命令查询端口转发规则是否生效：
		> netsh interface portproxy show all
			侦听 ipv4:                 连接到 ipv4:
			地址            端口        地址            端口
			--------------- ----------  --------------- ----------
			0.0.0.0         80          172.18.48.151   80
			0.0.0.0         443         172.18.48.151   443
			0.0.0.0         3633        172.18.48.151   3633
			0.0.0.0         4101        172.18.48.151   4101
			0.0.0.0         4102        172.18.48.151   4102
			0.0.0.0         10501       172.18.48.151   10501